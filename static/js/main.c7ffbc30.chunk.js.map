{"version":3,"sources":["firebase/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","databaseURL","storageBucket","messagingSenderId","appId","measurementId","storage","database","App","_React$useState","React","_React$useState2","_slicedToArray","value","setValue","_useState","useState","_useState2","imageAsFile","setImageAsFile","_useState3","imgUrl","_useState4","imageAsUrl","setImageAsUrl","_useState5","_useState6","progresspercent","setProgresspercent","_useState7","_useState8","count","setCount","_jsxs","className","children","_jsx","onChange","event","target","label","map","option","onClick","onSubmit","e","preventDefault","console","log","alert","ref","concat","name","put","on","snapShot","progress","Math","round","bytesTransferred","totalBytes","err","child","getDownloadURL","then","fireBaseUrl","prevObject","_objectSpread","set","user_id","image_url","catch","type","image","files","imageFile","style","width","src","alt","height","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c7ffbc30.chunk.js","sourcesContent":["\r\nimport 'firebase/storage'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/database'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDaSUcIU2HAqbh9Gnxh3qmwGHdukkVveVs\",\r\n  authDomain: \"festivals-b8987.firebaseapp.com\",\r\n  projectId: \"festivals-b8987\",\r\n  databaseURL:\"https://festivals-b8987-default-rtdb.firebaseio.com/\",\r\n  storageBucket: \"festivals-b8987.appspot.com\",\r\n  messagingSenderId: \"304849449258\",\r\n  appId: \"1:304849449258:web:281026572e1a1c7784ae53\",\r\n  measurementId: \"G-6FPJW406W6\"\r\n \r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n//analytics is optional for this tutoral \r\n // firebase.analytics();\r\n  const storage = firebase.storage()\r\n  const database = firebase.database();\r\n  export  {\r\n    storage,database,firebase  as default\r\n  }\r\n  ","\nimport './App.css';\n\nimport { useState } from 'react';\n\nimport * as React from 'react';\nimport firebase from './firebase/firebase';\n\nfunction App() {\n  const options = [\n\n    { label: 'Independence Day', value: 'Independence Day' },\n    { label: 'Hariyali Teej', value: 'Hariyali Teej' },\n    { label: 'Holi', value: 'HOli' },\n    { label: 'Diwali', value: 'Diwali'},\n    { label: 'New Year', value: 'New Year' },\n    { label: 'Stickers', value: 'Stickers' },\n    { label: 'Rakshabandhan ', value: 'Rakshabandhan' },\n \n  ];\n  const [value, setValue] = React.useState('fruit');\n  //const [image, setImage] = useState('');\n  const allInputs = {imgUrl: ''}\n  const [imageAsFile, setImageAsFile] = useState('')\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs)\n  const [progresspercent, setProgresspercent] = useState(0);\n  \n  const [count, setCount] = useState(0);\n  const handleChange = (event) => {\n\n    setValue(event.target.value);\n \n  };\n\n  const onStart = () => {\n    setCount(count+1);\n  };\n  const onStop = () => {\n    if(count===0){\n      setCount(count-1);\n    }\n   \n  };\n\n  const handleImageAsFile = (e) => {\n    const image = e.target.files[0]\n    setImageAsFile(imageFile => (image))\n}   \n\n    const handleFireBaseUpload =  e => {\n   \n        e.preventDefault()\n        console.log('start of upload')\n       // database().ref(`/${value}`).put({name: \"name\", age: \"age\",}).catch(alert);\n\n        \n        if(imageAsFile === '' ) {\n          alert(\"Please select image\")\n         // console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\n        }else{\n         \n         \n          firebase.storage().ref(`/${value}/${imageAsFile.name}`).put(imageAsFile).on(\"state_changed\", \n          (snapShot) => {\n            //takes a snap shot of the process as it is happening\n             const progress =\n            Math.round((snapShot.bytesTransferred / snapShot.totalBytes) * 100);\n          setProgresspercent(progress);\n            console.log(snapShot)\n          }, (err) => {\n            //catches the errors\n            console.log(err)\n          }, () => {\n            alert(\"success\");\n            // gets the functions from storage refences the image storage in firebase by the children\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\n            \n            firebase.storage().ref(`/${value}`).child(imageAsFile.name).getDownloadURL()\n             .then(fireBaseUrl => {\n               setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl})) \n               firebase.database().ref(`/${value}`).child(count).set({\n              user_id: count,\n              image_url:fireBaseUrl,\n             \n            }).catch(alert);\n             })\n            \n            \n          })\n         }\n       \n    }\n \n\n  return (\n    <div className=\"App\">\n\n      <div>\n      <label>\n\nSelect festivals?\n\n<select  value={value} onChange={handleChange}>\n\n  {options.map((option) => (\n\n    <option value={option.value}>{option.label}</option>\n\n  ))}\n\n</select>\n\n</label>\n<button onClick={onStart}>+</button>\n       <label>{count}</label>\n        <button onClick={onStop}>-</button>\n      </div>\n   \n    <form onSubmit={handleFireBaseUpload}  className='form'>\n        <input \n          type=\"file\"\n          onChange={handleImageAsFile}\n        />\n          <button>upload to firebase</button>\n      \n      \n      </form>\n      {\n        !imageAsFile &&\n        <div className='outerbar'>\n          <div className='innerbar' style={{ width: `${progresspercent}%` }}>{progresspercent}%</div>\n        </div>\n      }\n      {\n        imageAsFile &&\n        <img src={imageAsUrl.imgUrl} alt='uploaded file' height={100}  width={100}/>\n      }\n    \n</div>\n  );\n}export  {\n  App as default\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}